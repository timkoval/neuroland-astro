---
import { Icon } from "astro-icon/components";

interface Props {
	videoId: string;
}

const { videoId } = Astro.props;

// Fetch the thumbnail URL using TikTok's OEmbed API
const response = await fetch(
	`https://www.tiktok.com/oembed?url=https://www.tiktok.com/video/${videoId}`,
);
const data = await response.json();
const thumbnailUrl = data.thumbnail_url;
---

<div class="tiktok-embed-container">
	<div class="video-preview" data-video-id={videoId}>
		<div class="preview-content">
			<Icon name="tiktok" width="160px" height="40px" />
			<img src={thumbnailUrl} alt="TikTok video preview" loading="lazy" />
			<button class="play-button" aria-label="Play video">
				<svg
					width="80"
					height="80"
					viewBox="0 0 24 24"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
				>
					<circle cx="12" cy="12" r="12" fill="rgba(0,0,0,0.7)"></circle>
					<path d="M9 7.5L17 12L9 16.5V7.5Z" fill="white"></path>
				</svg>
			</button>
		</div>
	</div>
</div>

<script>
	function initializePreviews() {
		document.querySelectorAll(".video-preview").forEach((preview: Element) => {
			preview.addEventListener("click", function (this: HTMLElement) {
				const videoId = this.dataset.videoId;
				if (!videoId) return;

				const embed = document.createElement("blockquote");
				embed.className = "tiktok-embed";
				embed.setAttribute(
					"cite",
					`https://www.tiktok.com/@anyuser/video/${videoId}`,
				);
				embed.setAttribute("data-video-id", videoId);
				embed.style.maxWidth = "605px";
				embed.style.minWidth = "325px";
				embed.innerHTML = "<section></section>";

				// Replace preview with embed
				this.parentNode?.replaceChild(embed, this);

				// Load TikTok embed script
				const script = document.createElement("script");
				script.src = "https://www.tiktok.com/embed.js";
				script.async = true;
				document.body.appendChild(script);
			});
		});
	}

	// Initialize on first load
	initializePreviews();

	// Re-initialize after view transitions
	document.addEventListener("astro:after-swap", initializePreviews);
</script>

<style>
	.tiktok-embed-container {
		margin: var(--space-s) auto;
		display: flex;
		justify-content: center;
		width: 100%;
	}

	/* Add this new rule to reset blockquote styles */
	:global(.tiktok-embed) {
		margin: 0 !important;
		padding: 0 !important;
	}

	:global(.tiktok-embed)::after {
		display: none !important;
	}

	.video-preview {
		position: relative;
		cursor: pointer;
		max-width: 605px;
		width: 100%;
		height: 640px;
		border-radius: var(--border-radius-base);
		overflow: hidden;
		background: var(--flexoki-100);
		border: 1px solid var(--flexoki-200);
	}

	.preview-content {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 640px;
	}

	.preview-content svg {
		margin: var(--space-s) 0;
	}

	.preview-content img {
		width: 350px;
		height: 640px;
		object-fit: cover;
		margin: 0;
	}

	.play-button {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		background: none;
		border: none;
		cursor: pointer;
		padding: 0;
		transition: transform 0.2s ease;
	}

	.video-preview:hover .play-button {
		transform: translate(-50%, -50%) scale(1.1);
	}
</style>
