---
import { Icon } from "astro-icon/components";
import UnderlineHoverLink from "../../mdx/UnderlineHoverLink.astro";
---

<div class="main" role="navigation" aria-label="Main">
	<div class="popover">
		<a href="/garden" class="hover-link">
			<span>The Garden</span>
		</a>
		<button
			class="popover-button"
			aria-expanded="false"
			aria-controls="garden-dropdown"
			aria-label="Toggle Garden menu"
		>
			<Icon name="heroicons:chevron-down" size={20} class="chevron-icon" />
		</button>

		<div class="dropdown" id="garden-dropdown" role="list">
			<a href="/projects" role="listitem">
				<span class="dropdown-link">Research & Projects</span>
			</a>
			<a href="/notes">
				<span class="dropdown-link">Learning Notes</span>
			</a>
			<a href="/articles">
				<span class="dropdown-link">Blog Articles</span>
			</a>
			<a href="/resources">
				<span class="dropdown-link">Resources</span>
			</a>
		</div>
	</div>

	<div class="outside-dropdown">
		<UnderlineHoverLink href="/now">Now</UnderlineHoverLink>
		<UnderlineHoverLink href="/about">About</UnderlineHoverLink>
	</div>
</div>

<script>
	function initializeDropdown() {
		const button = document.querySelector(".popover-button");
		const dropdown = document.getElementById("garden-dropdown");

		if (button && dropdown) {
			// Force close on initialization
			closeDropdown();

			// Add Escape key handler
			document.addEventListener("keydown", (e) => {
				if (e.key === "Escape" && dropdown.style.display !== "none") {
					closeDropdown();
					(button as HTMLElement)?.focus();
				}
			});

			// Close dropdown when focus moves outside navigation
			document.addEventListener("focusout", (e) => {
				const target = e.relatedTarget as Node;
				// Don't close if clicking a link inside the dropdown
				if (target && dropdown.contains(target)) {
					return;
				}
				if (!dropdown.contains(target) && !button.contains(target)) {
					closeDropdown();
				}
			});

			// Handle button clicks
			button.addEventListener("click", (e) => {
				e.stopPropagation();
				if (dropdown.style.display === "none") {
					openDropdown();
				} else {
					closeDropdown();
				}
			});

			// Close before navigation starts
			document.addEventListener("astro:before-preparation", closeDropdown);
		}

		function openDropdown() {
			if (!dropdown || !button) return;
			dropdown.style.display = "flex";
			button.setAttribute("aria-expanded", "true");
			requestAnimationFrame(() => {
				dropdown.style.opacity = "1";
				dropdown.style.transform = "rotateX(0deg)";
			});
		}

		function closeDropdown() {
			if (!button || !dropdown) return;
			dropdown.style.display = "none";
			dropdown.style.opacity = "0";
			dropdown.style.transform = "rotateX(90deg)";
			button.setAttribute("aria-expanded", "false");
		}
	}

	// Initialize on page load
	initializeDropdown();

	// Re-initialize after each navigation
	document.addEventListener("astro:page-load", initializeDropdown);
</script>

<style>
	.main {
		display: flex;
		flex-shrink: 0;
	}

	.popover {
		position: relative;
	}

	.hover-link {
		margin-left: var(--space-s);
		text-decoration: none;
		font-size: var(--font-size-xs);
		font-family: var(--font-sans);
		transition: color 0.2s ease-in-out;
		cursor: pointer;
		position: relative;
		top: 1px;
		white-space: nowrap;
		padding-bottom: 0.25rem;
	}

	.hover-link span {
		color: var(--flexoki-800);
	}

	.hover-link:hover span {
		color: var(--flexoki-cyan-600);
	}

	.hover-link:focus {
		outline: 2px solid darkblue;
		border-radius: 2px;
	}

	.hover-link::before {
		content: "";
		transform-origin: 50% 100%;
		background: var(--flexoki-150);
		transition:
			clip-path 0.3s,
			transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
		position: absolute;
		width: 100%;
		height: 1px;
		top: 95%;
		left: 0;
		pointer-events: none;
		clip-path: polygon(
			0% 0%,
			0% 100%,
			0 100%,
			0 0,
			100% 0,
			100% 100%,
			0 100%,
			0 100%,
			100% 100%,
			100% 0%
		);
	}

	.hover-link:hover::before {
		transform: translate3d(0, 2px, 0) scale3d(1, 2, 1);
		clip-path: polygon(
			0% 0%,
			0% 100%,
			100% 100%,
			50% 0,
			50% 0,
			50% 100%,
			50% 100%,
			0 100%,
			100% 100%,
			100% 0%
		);
	}

	.popover-button {
		padding: 0;
	}

	.chevron-icon {
		vertical-align: middle;
		transition:
			color 0.3s ease-in-out,
			background-color 0.3s ease-in-out,
			transform 0.8s ease-in-out;
		color: var(--flexoki-600);
		margin-left: var(--space-3xs);
		position: relative;
		top: 0;
	}

	.popover-button:hover .chevron-icon {
		color: var(--flexoki-magenta-600);
		transform: rotateY(180deg);
		cursor: pointer;
		background-color: var(--flexoki-100);
		border-radius: 4px;
	}

	.dropdown {
		display: flex;
		flex-direction: column;
		margin-top: 0.6rem;
		background: var(--flexoki-paper);
		margin-left: 0.4rem;
		border: 1px solid var(--flexoki-200);
		border-radius: var(--border-radius-base);
		box-shadow: var(--box-shadow-lg);
		z-index: 1;
		position: absolute;
		transform-origin: top;
		transition:
			opacity 0.6s ease-in-out,
			transform 0.6s ease-in-out;
	}

	.dropdown-link {
		margin: 0;
		color: var(--flexoki-800);
		text-decoration: none;
		font-size: var(--font-size-xs);
		font-family: var(--font-sans);
		border-bottom: 1px solid var(--flexoki-200);
		border-left: 2px solid var(--flexoki-paper);
		padding: var(--space-2xs) var(--space-l) var(--space-2xs) var(--space-xs);
		transition: all 0.3s ease-in-out;
		cursor: pointer;
		display: block;
	}

	.dropdown-link:hover {
		background: var(--flexoki-50);
		color: var(--flexoki-cyan-600);
	}

	.outside-dropdown :global(.link-container) {
		margin-left: var(--space-s);
		top: 1px;
		left: 3px;
	}

	.outside-dropdown :global(.styled-link span) {
		font-size: var(--font-size-xs);
		font-family: var(--font-sans);
		color: var(--flexoki-800);
	}

	@media screen and (max-width: 550px) {
		.main {
			display: none;
		}
	}
</style>
