---
import type { CollectionEntry } from "astro:content";
import type { MarkdownHeading } from "astro";
import Layout from "./Layout.astro";
import { Icon } from "astro-icon/components";
import Backlinks from "../components/layouts/Backlinks.astro";
import WebMentions from "../components/layouts/WebMentions.astro";
import linkMaps from "../links.json";
import GrowthIcon from "../components/layouts/GrowthIcon.astro";
import Dates from "../components/layouts/Dates.astro";
import Topics from "../components/layouts/Topics.astro";

// You'll need to find Astro alternatives for these React components:
// - BackToTop

type Props = {
	frontmatter:
		| CollectionEntry<"essays">["data"]
		| CollectionEntry<"notes">["data"]
		| CollectionEntry<"patterns">["data"]
		| CollectionEntry<"talks">["data"];
	headings: MarkdownHeading[];
};

const { frontmatter } = Astro.props;

// Get the current page's slug from the URL
const currentSlug = Astro.url.pathname.replace(/^\/|\/$/g, "");

// Find the current post in linkMaps
const currentPost = linkMaps.find((post) => post.slug === currentSlug);

// Get backlinks for the current post
const backlinks = currentPost?.inboundLinks || [];

// Only essays and talks have cover images
const coverImage =
	frontmatter.type === "essay" || frontmatter.type === "talk"
		? frontmatter.cover?.src
		: undefined;
---

<Layout
	title={frontmatter.title}
	desc={frontmatter.description}
	type={frontmatter.type}
	coverImage={coverImage}
>
	<header class="header-section">
		<div class="above-title">
			<div class="back-link">
				<a href={`/${frontmatter.type}s`}>
					<Icon name="heroicons:arrow-left" size={16} />
					<span>
						{
							frontmatter.type.charAt(0).toUpperCase() +
								frontmatter.type.slice(1)
						}s
					</span>
				</a>
			</div>
			<GrowthIcon
				size="16"
				growthStage={frontmatter.growthStage as
					| "budding"
					| "evergreen"
					| "seedling"}
			/>
			<p>{frontmatter.growthStage}</p>
			{frontmatter.draft && <span class="draft-label">Draft</span>}
		</div>
		<div class="title-container">
			<h1>{frontmatter.title}</h1>
			{frontmatter.description && <p>{frontmatter.description}</p>}
		</div>
		<div class="metadata">
			{frontmatter.topics && <Topics topics={frontmatter.topics} />}
			<Dates
				startDate={frontmatter.startDate instanceof Date
					? frontmatter.startDate.toISOString()
					: frontmatter.startDate}
				updated={frontmatter.updated instanceof Date
					? frontmatter.updated.toISOString()
					: frontmatter.updated}
			/>
		</div>
	</header>

	<main class="styled-main">
		<slot />
	</main>

	{backlinks.length ? <Backlinks backlinks={backlinks} /> : null}

	<WebMentions postSlug={currentSlug} hasBacklinks={backlinks.length > 0} />
</Layout>

<style>
	.title-container {
		padding: var(--space-s) 0 var(--space-l);
		border-bottom: 1px solid var(--color-tinted-cream);
	}

	.title-container h1 {
		font-size: var(--font-size-2xl);
		font-weight: 600;
		line-height: var(--leading-tighter);
		max-width: 100%;
	}

	.title-container p {
		font-size: var(--font-size-md);
		margin: var(--space-s) 0 0 0;
		color: var(--flexoki-600);
		line-height: var(--leading-base);
	}

	.header-section {
		max-width: 800px;
		margin: var(--space-l) auto 0;
	}

	.above-title {
		display: flex;
		align-items: center;
		gap: var(--space-xs);
		min-height: 24px;
	}

	.above-title a,
	.above-title p {
		display: inline-flex;
		align-items: center;
		font-family: var(--font-sans);
		font-size: var(--font-size-xs);
		text-transform: uppercase;
		letter-spacing: 0.05em;
		font-weight: bold;
		margin: 0;
	}

	.above-title svg {
		display: block;
		position: relative;
		margin: auto 0;
	}

	.metadata {
		justify-content: space-between;
		display: flex;
		flex-direction: row;
	}

	.styled-main {
		margin-top: var(--space-xs);
		padding: var(--space-l) 0 var(--space-2xl);
		background: linear-gradient(var(--flexoki-paper) 0, white 110px);
		width: 100%;
	}

	@media (max-width: 768px) {
		.metadata {
			flex-direction: column;
			text-align: left;
			align-items: flex-start;
		}

		.styled-main {
			padding: var(--space-xl) var(--space-xs);
		}

		.header-section {
			padding: 0 var(--space-xs);
		}
	}

	@media screen and (max-width: 425px) {
		.title-container h1 {
			font-size: var(--font-size-xl);
		}

		.title-container p {
			font-size: var(--font-size-base);
		}
	}

	.draft-label {
		display: inline-block;
		font-family: var(--font-sans);
		font-size: var(--font-size-xs);
		text-transform: uppercase;
		letter-spacing: 0.05em;
		font-weight: bold;
		padding: 2px 6px;
		border-radius: 4px;
		background-color: var(--flexoki-200);
		color: var(--flexoki-700);
		margin-left: var(--space-xs);
	}

	.back-link {
		display: flex;
		align-items: center;
		height: 100%;
	}

	.back-link a {
		display: inline-flex;
		align-items: center;
		position: relative;
		font-family: var(--font-sans);
		font-size: var(--font-size-xs);
		text-transform: uppercase;
		letter-spacing: 0.05em;
		font-weight: bold;
		transition: all 0.8s cubic-bezier(0.2, 1, 0.8, 1);
		margin: 0;
		padding: 0;
	}

	.back-link svg {
		width: 0;
		transition: all 0.8s cubic-bezier(0.2, 1, 0.8, 1);
		color: var(--flexoki-300);
		position: relative;
		top: 1px;
	}

	.back-link span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
		color: var(--flexoki-magenta-600);
	}

	.back-link a:hover svg {
		width: 16px;
		margin-right: 2px;
		color: var(--color-sea-blue);
	}

	.back-link a:hover span {
		transform: translate3d(3px, 0, 0);
	}
</style>
