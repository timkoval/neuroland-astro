---
import { getCollection, getEntry } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Title1 from "../components/mdx/typography/Title1.astro";
import Title2 from "../components/mdx/typography/Title2.astro";
import Title3 from "../components/mdx/typography/Title3.astro";
import Title4 from "../components/mdx/typography/Title4.astro";
import TooltipLink from "../components/mdx/TooltipLink.astro";
import BasicImage from "../components/mdx/BasicImage.astro";
import InternalTooltipLink from "../components/mdx/InternalTooltipLink.astro";
import ProseWrapper from "../components/layouts/ProseWrapper.astro";
import Footnote from "../components/mdx/Footnote.astro";
import ResourceBook from "../components/mdx/ResourceBook.astro";
import Spacer from "../components/mdx/Spacer.astro";
import { Icon } from "astro-icon/components";

export async function getStaticPaths() {
	const nowEntries = await getCollection("now", ({ data }) => {
		return data.draft !== true;
	});

	return nowEntries.map((entry) => ({
		params: { slug: entry.id },
		props: { entry },
	}));
}

const { entry } = Astro.props;
import { render } from "astro:content";
const { Content } = await render(entry);

const components = {
	h1: Title1,
	h2: Title2,
	h3: Title3,
	h4: Title4,
	a: TooltipLink,
	img: BasicImage,
	InternalTooltipLink,
	Footnote,
	ResourceBook,
	BasicImage,
	Spacer,
};
---

<Layout title={`${entry.data.title} | Tim Koval`} type="now">
	<header class="header-section">
		<div class="above-title">
			<div class="back-link">
				<a href="/now">
					<Icon name="heroicons:arrow-left" size={16} />
					<span>Back to the Now page</span>
				</a>
			</div>
		</div>

		<div class="now-layout">
			<div class="metadata">
				<div class="date-permalink">
					<time datetime={entry.data.date.toISOString()}>
						{
							entry.data.date.toLocaleDateString("en-US", {
								year: "numeric",
								month: "long",
								day: "numeric",
							})
						}
					</time>
				</div>
			</div>

			<div class="content">
				<h3 class="title">{entry.data.title}</h3>
				<ProseWrapper>
					<Content components={components} />
				</ProseWrapper>
			</div>
		</div>
	</header>
</Layout>

<style>
	.header-section {
		max-width: 1000px;
		margin: var(--space-l) auto 0;
	}

	.now-layout {
		display: grid;
		grid-template-columns: 200px minmax(0, 800px);
		gap: var(--space-l);
	}

	.title {
		font-size: var(--font-size-lg);
		font-weight: 300;
		margin: 0 0 var(--space-m) 0;
		line-height: var(--leading-tight);
	}

	.above-title {
		display: flex;
		align-items: center;
		gap: var(--space-xs);
		margin-bottom: var(--space-m);
	}

	.metadata {
		display: flex;
		flex-direction: column;
		gap: var(--space-xs);
		margin-top: var(--space-xs);
	}

	.date-permalink {
		display: flex;
		align-items: center;
		gap: var(--space-2xs);
	}

	time {
		font-size: var(--font-size-sm);
		color: var(--color-gray-600);
		font-family: var(--font-sans);
	}

	.content {
		color: var(--color-gray-800);
		margin-bottom: var(--space-2xl);
	}

	.back-link {
		display: flex;
		align-items: center;
		height: 100%;
	}

	.back-link a {
		display: inline-flex;
		align-items: center;
		position: relative;
		font-family: var(--font-sans);
		font-size: var(--font-size-xs);
		text-transform: uppercase;
		letter-spacing: 0.05em;
		font-weight: bold;
		transition: all 0.8s cubic-bezier(0.2, 1, 0.8, 1);
		margin: 0;
		padding: 0;
	}

	.back-link svg {
		width: 0;
		transition: all 0.8s cubic-bezier(0.2, 1, 0.8, 1);
		color: var(--color-gray-300);
		position: relative;
		top: 1px;
	}

	.back-link span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
		color: var(--color-gray-600);
	}

	.back-link span:hover {
		color: var(--color-medium-sea-blue);
	}

	.back-link a:hover svg {
		width: 16px;
		margin-right: 2px;
		color: var(--color-sea-blue);
	}

	.back-link a:hover span {
		transform: translate3d(3px, 0, 0);
	}

	@media (max-width: 768px) {
		.now-layout {
			grid-template-columns: 1fr;
			gap: var(--space-s);
		}

		.metadata {
			flex-direction: row;
			flex-wrap: wrap;
			align-items: center;
			gap: var(--space-s);
		}

		.header-section {
			padding: 0 var(--space-xs);
		}
	}
</style>
