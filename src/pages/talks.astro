---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Title2 from "../components/mdx/typography/Title2.astro";
import TalkCard from "../components/cards/TalkCard.astro";
import TitleWithCount from "../components/layouts/TitleWithCount.astro";
import PageWrapper from "../components/layouts/PageWrapper.astro";
import MasonryGrid from "../components/layouts/MasonryGrid.astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

// Import the images
import talks1 from "../images/general/talks_1.webp";
import talks2 from "../images/general/talks_2.webp";
import talks3 from "../images/general/talks_3.webp";
import talks5 from "../images/general/talks_5.webp";

// Get all talks that aren't drafts
const talks = await getCollection("talks", ({ data }) => !data.draft);

// Sort talks by date
const sortedTalks = talks.sort(
	(a, b) =>
		new Date(b.data.updated).getTime() - new Date(a.data.updated).getTime(),
);
---

<Layout title="Talks by Tim Koval">
	<PageWrapper>
		<header style="margin-bottom: var(--space-xl);">
			<TitleWithCount posts={sortedTalks}>
				<div class="back-link" slot="header-right">
					<a href="/garden">
						<Icon name="heroicons:arrow-left" size={16} />
						<span> Back to Garden </span>
					</a>
				</div>
				Talks
			</TitleWithCount>
			<Title2
				>I occassionally give talks. Subjects range from visual programming to
				cultural anthropology to design tactics to the narratives we tell about
				software to the repercussions of jetspraying the web with thoughtless AI
				slop.</Title2
			>
		</header>
		<div class="image-grid">
			<Image
				src={talks1}
				alt="a photo of maggie speaking on stage"
				width={660}
				class="talk-image"
			/>
			<Image
				src={talks2}
				alt="a photo of maggie answering questions after a talk"
				width={660}
				class="talk-image"
			/>
			<Image
				src={talks3}
				alt="a photo of maggie in front of a large presentation slide"
				width={660}
				class="talk-image"
			/>
			<Image
				src={talks5}
				alt="a photo of maggie in front of a large presentation slide"
				width={660}
				class="talk-image"
			/>
		</div>

		<div class="spacer"></div>

		<MasonryGrid>
			<div class="grid-sizer"></div>
			{
				sortedTalks.map((talk) => (
					<div class="grid-item">
						<TalkCard
							id={talk.id}
							slug={talk.id}
							title={talk.data.title}
							conferences={talk.data.conferences}
							date={talk.data.updated}
							cover={talk.data.cover}
						/>
					</div>
				))
			}
		</MasonryGrid>
	</PageWrapper>
</Layout>

<style>
	.image-grid {
		margin-top: var(--space-l);
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(min(100%, 600px), 1fr));
		gap: 0.5rem;
		max-width: 100%;
	}

	.talk-image {
		max-width: 100%;
		height: auto;
		object-fit: cover;
		width: 100%;
	}

	.spacer {
		height: var(--space-xl);
	}

	.back-link {
		display: inline-flex;
		align-items: center;
		height: 100%;
		position: relative;
		left: -2rem;
	}

	@media (max-width: 1440px) {
		.back-link {
			display: inline-flex;
			top: 0;
			margin: 0;
			left: 1rem;
		}
	}

	.back-link a {
		display: inline-flex;
		align-items: center;
		position: relative;
		font-family: var(--font-sans);
		font-size: var(--font-size-xs);
		text-transform: uppercase;
		letter-spacing: 0.05em;
		font-weight: bold;
		transition: all 0.8s cubic-bezier(0.2, 1, 0.8, 1);
		margin: 0;
		padding: 0;
	}

	.back-link svg {
		width: 0;
		transition: all 0.8s cubic-bezier(0.2, 1, 0.8, 1);
		color: var(--color-gray-300);
		position: relative;
		top: 1px;
	}

	.back-link span {
		display: inline-block;
		transition: transform 0.3s cubic-bezier(0.2, 1, 0.8, 1);
		color: var(--color-gray-600);
	}

	.back-link a:hover svg {
		width: 16px;
		margin-right: 2px;
		color: var(--color-sea-blue);
	}

	.back-link a:hover span {
		transform: translate3d(3px, 0, 0);
		color: var(--color-sea-blue);
	}
</style>
